apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: terraform-aws-lambda
  title: AWS Lambda Function
  description: Create a new AWS Lambda function using Terraform
  tags:
    - terraform
    - aws
    - lambda
    - serverless
spec:
  owner: infrastructure-team
  type: infrastructure
  templater: v1beta3

  parameters:
    - title: Basic Information
      required: ['functionName']
      properties:
        functionName:
          title: Function Name
          type: string
          description: Name of the Lambda function
          ui:autofocus: true
          pattern: '^[a-z0-9-]+$'
          minLength: 3
          maxLength: 63
        description:
          title: Description
          type: string
          description: Description of the Lambda function
          maxLength: 256

    - title: Runtime Configuration
      required: ['runtime', 'handler']
      properties:
        runtime:
          title: Runtime
          type: string
          description: Runtime environment for the Lambda function
          enum:
            - nodejs18.x
            - python3.9
            - python3.10
            - java11
            - go1.x
          default: python3.9
        handler:
          title: Handler
          type: string
          description: Function handler (e.g., index.handler for Node.js, main.handler for Python)
          default: main.handler
          pattern: '^[a-zA-Z0-9_\-\.]+$'

    - title: Resource Configuration
      properties:
        memorySize:
          title: Memory Size (MB)
          type: number
          description: Memory size for the Lambda function in MB
          default: 128
          minimum: 128
          maximum: 10240
        timeout:
          title: Timeout (seconds)
          type: number
          description: Function timeout in seconds
          default: 30
          minimum: 1
          maximum: 900

  steps:
    - id: template
      name: Fetch Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          functionName: ${{ parameters.functionName }}
          description: ${{ parameters.description }}
          runtime: ${{ parameters.runtime }}
          handler: ${{ parameters.handler }}
          memorySize: ${{ parameters.memorySize }}
          timeout: ${{ parameters.timeout }}

    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        repoVisibility: private
        sourcePath: ${{ steps.template.output.path }}

    - id: register
      name: Register Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in GitHub
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in Terraform Cloud
        url: https://app.terraform.io/app/your-org/workspaces/${{ parameters.functionName }}
      - title: Open in Backstage
        url: /catalog/default/component/${{ parameters.functionName }}
