apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: ${{ values.functionName }}
  description: ${{ values.description || 'AWS Lambda Function' }}
  annotations:
    backstage.io/managed-by-location: url:./catalog-info.yaml
    backstage.io/managed-by-origin-location: url:./catalog-info.yaml
    aws.com/lambda-runtime: ${{ values.runtime }}
    aws.com/lambda-handler: ${{ values.handler }}
    aws.com/lambda-memory: '${{ values.memorySize }}MB'
    aws.com/lambda-timeout: '${{ values.timeout }}s'
  labels:
    cloud: aws
    type: serverless
    service: lambda
spec:
  type: service
  lifecycle: production
  owner: infrastructure-team
  system: serverless-functions
  providesApis:
    - ${{ values.functionName }}-api
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: ${{ values.functionName }}-api
  description: API for interacting with ${{ values.functionName }} Lambda function
spec:
  type: openapi
  lifecycle: production
  owner: infrastructure-team
  system: serverless-functions
  definition: |
    openapi: "3.0.0"
    info:
      version: 1.0.0
      title: ${{ values.functionName }} API
      description: API for the ${{ values.functionName }} Lambda function
    paths:
      /invoke:
        post:
          summary: Invoke the Lambda function
          responses:
            '200':
              description: Function execution result
