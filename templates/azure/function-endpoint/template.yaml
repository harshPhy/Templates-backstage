apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: terraform-azure-function-endpoint
  title: Azure Function Endpoint
  description: Deploy an Azure Function for serverless model serving using Terraform
  tags:
    - terraform
    - azure
    - function
    - serverless
    - ml
    - endpoint
spec:
  owner: ml-platform-team
  type: infrastructure

  parameters:
    - title: Azure Function Endpoint Information
      required:
        - resourceGroupName
        - functionAppName
      properties:
        resourceGroupName:
          title: Resource Group Name
          type: string
          description: Name of the Azure resource group
          ui:autofocus: true
        functionAppName:
          title: Function App Name
          type: string
          description: Name of the Azure Function App
        location:
          title: Azure Region
          type: string
          description: Azure region to deploy to
          default: eastus
        runtime:
          title: Function Runtime
          type: string
          description: Runtime to use for the function app
          enum:
            - python
            - node
            - dotnet
            - java
          default: python
        runtimeVersion:
          title: Runtime Version
          type: string
          description: Version of the runtime
          default: '3.9'
        storageSku:
          title: Storage SKU
          type: string
          description: SKU for the storage account
          default: Standard_LRS
        tier:
          title: App Service Plan Tier
          type: string
          description: Tier for the App Service Plan
          enum:
            - Dynamic
            - Basic
            - Standard
            - Premium
          default: Dynamic
        size:
          title: App Service Plan Size
          type: string
          description: Size for the App Service Plan
          default: Y1

  steps:
    - id: fetch-template
      name: Fetch Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          resourceGroupName: ${{ parameters.resourceGroupName }}
          functionAppName: ${{ parameters.functionAppName }}
          location: ${{ parameters.location }}
          runtime: ${{ parameters.runtime }}
          runtimeVersion: ${{ parameters.runtimeVersion }}
          storageSku: ${{ parameters.storageSku }}
          tier: ${{ parameters.tier }}
          size: ${{ parameters.size }}

  output:
    links:
      - title: GitHub Repository
        url: ${{ steps.publish.output.remoteUrl || '/' }}
      - title: Azure Portal
        url: https://portal.azure.com
