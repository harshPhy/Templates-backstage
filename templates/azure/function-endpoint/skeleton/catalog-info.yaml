apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: ${{ values.functionAppName }}
  description: ${{ values.description || 'Azure Function App' }}
  annotations:
    backstage.io/managed-by-location: url:./catalog-info.yaml
    backstage.io/managed-by-origin-location: url:./catalog-info.yaml
    azure.com/location: ${{ values.location }}
    azure.com/resource-group: ${{ values.resourceGroupName }}
    function.azure.com/runtime: ${{ values.runtime }}
    function.azure.com/sku: ${{ values.skuName }}
    function.azure.com/os-type: ${{ values.osType || 'linux' }}
  labels:
    cloud: azure
    type: serverless
    service: function-app
spec:
  type: service
  lifecycle: production
  owner: infrastructure-team
  system: serverless-functions
  dependsOn:
    - resource:azure:app-service-plan:${{ values.appServicePlanName }}
  providesApis:
    - ${{ values.functionAppName }}-api
---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: ${{ values.appServicePlanName }}
  description: App Service Plan for Azure Function
  annotations:
    azure.com/location: ${{ values.location }}
    azure.com/resource-group: ${{ values.resourceGroupName }}
  labels:
    cloud: azure
    type: hosting-plan
spec:
  type: hosting-plan
  lifecycle: production
  owner: infrastructure-team
  system: serverless-functions
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: ${{ values.functionAppName }}-api
  description: API for interacting with the Azure Function
spec:
  type: openapi
  lifecycle: production
  owner: infrastructure-team
  system: serverless-functions
  definition: |
    openapi: "3.0.0"
    info:
      version: 1.0.0
      title: ${{ values.functionAppName }} API
      description: API for the Azure Function App
    paths:
      /api/function:
        post:
          summary: Invoke function
          responses:
            '200':
              description: Function execution result
