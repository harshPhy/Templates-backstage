apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: terraform-aws-rds-postgres
  title: AWS RDS PostgreSQL Database
  description: Create a configurable AWS RDS PostgreSQL database using Terraform
  tags:
    - terraform
    - aws
    - database
    - rds
    - postgres
    - infrastructure
spec:
  owner: harshPhy
  type: infrastructure
  templater: nunjucks

  parameters:
    - title: Basic Database Information
      required: ['name', 'db_name']
      properties:
        name:
          title: Resource Name
          type: string
          description: Unique name for the RDS resource
          ui:autofocus: true
          pattern: '^[a-z0-9-]+$'
          minLength: 3
          maxLength: 63
        db_name:
          title: Database Name
          type: string
          description: Name of the database to be created
          pattern: '^[a-zA-Z0-9_]+$'
          minLength: 1
          maxLength: 63
        description:
          title: Description
          type: string
          description: Description of the RDS resource
          maxLength: 256
        environment:
          title: Environment
          type: string
          description: Deployment environment (dev, staging, prod)
          default: dev
          enum:
            - dev
            - staging
            - prod

    - title: Database Configuration
      required: ['engine_version', 'instance_class', 'parameter_group_name']
      properties:
        engine_version:
          title: PostgreSQL Version
          type: string
          description: Version of PostgreSQL
          default: '14.3'
          enum:
            - '13.7'
            - '14.3'
            - '14.5'
            - '15.2'
        instance_class:
          title: Instance Class
          type: string
          description: RDS instance class
          default: 'db.t3.micro'
          enum:
            - db.t3.micro
            - db.t3.small
            - db.t3.medium
            - db.m5.large
            - db.r5.large
        parameter_group_name:
          title: Parameter Group
          type: string
          description: RDS parameter group name
          default: 'default.postgres14'

    - title: Storage Configuration
      required: ['allocated_storage', 'storage_type']
      properties:
        allocated_storage:
          title: Allocated Storage (GB)
          type: number
          description: The amount of allocated storage in gigabytes
          default: 20
          minimum: 5
          maximum: 1000
        storage_type:
          title: Storage Type
          type: string
          description: Type of storage for the RDS instance
          default: 'gp2'
          enum:
            - standard
            - gp2
            - io1

    - title: Access Configuration
      required: ['username']
      properties:
        username:
          title: Master Username
          type: string
          description: Master username for the RDS instance
          default: 'postgres'

    - title: Backup and Availability
      required: ['backup_retention_period', 'multi_az', 'publicly_accessible']
      properties:
        backup_retention_period:
          title: Backup Retention Period (days)
          type: number
          description: Number of days for automated backup retention
          default: 7
          minimum: 0
          maximum: 35
        multi_az:
          title: Multi-AZ Deployment
          type: boolean
          description: Enable high availability
          default: false
        publicly_accessible:
          title: Publicly Accessible
          type: boolean
          description: Expose database to public internet
          default: false

    - title: Network Configuration
      required: ['vpc_id', 'subnets', 'security_groups', 'region']
      properties:
        vpc_id:
          title: VPC ID
          type: string
          description: VPC where the RDS instance will be deployed
          default: 'vpc-example'
        subnets:
          title: Subnet IDs
          type: array
          description: Subnets for the RDS instance
          default: ['subnet-example1', 'subnet-example2']
        security_groups:
          title: Security Group IDs
          type: array
          description: Security groups for the RDS instance
          default: ['sg-example']
        region:
          title: AWS Region
          type: string
          description: AWS deployment region
          default: 'us-east-1'

    - title: Deployment Information
      required: ['repoUrl']
      properties:
        repoUrl:
          title: Repository URL
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: template
      name: Fetch Template
      action: fetch:template
      input:
        url: https://github.com/harshPhy/Templates-backstage/tree/main/templates/rds-temp/skeleton
        values:
          name: ${{ parameters.name }}
          db_name: ${{ parameters.db_name }}
          description: ${{ parameters.description }}
          environment: ${{ parameters.environment }}
          engine_version: ${{ parameters.engine_version }}
          instance_class: ${{ parameters.instance_class }}
          parameter_group_name: ${{ parameters.parameter_group_name }}
          allocated_storage: ${{ parameters.allocated_storage }}
          storage_type: ${{ parameters.storage_type }}
          username: ${{ parameters.username }}
          backup_retention_period: ${{ parameters.backup_retention_period }}
          multi_az: ${{ parameters.multi_az }}
          publicly_accessible: ${{ parameters.publicly_accessible }}
          vpc_id: ${{ parameters.vpc_id }}
          subnets: ${{ parameters.subnets }}
          security_groups: ${{ parameters.security_groups }}
          region: ${{ parameters.region }}
          repo_slug: ${{ parameters.repoUrl}}
          owner: ${{ parameters.repoUrl }}

    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        repoVisibility: private
        sourcePath: ${{ steps.template.output.path }}

    - id: register
      name: Register Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in GitHub
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in Backstage
        url: /catalog/default/component/${{ parameters.name }}
